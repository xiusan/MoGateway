<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mogateway.mapper.ChargeRecordMapper">
  <resultMap id="BaseResultMap" type="com.mogateway.entity.ChargeRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="charging_record_no" jdbcType="VARCHAR" property="chargingRecordNo" />
    <result column="equipment_no" jdbcType="VARCHAR" property="equipmentNo" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="card_number" jdbcType="VARCHAR" property="cardNumber" />
    <result column="charging_station_id" jdbcType="VARCHAR" property="chargingStationId" />
    <result column="charged_amount" jdbcType="DOUBLE" property="chargedAmount" />
    <result column="discount_amount" jdbcType="DOUBLE" property="discountAmount" />
    <result column="car_number" jdbcType="VARCHAR" property="carNumber" />
    <result column="start_charging_dttm" jdbcType="TIMESTAMP" property="startChargingDttm" />
    <result column="end_charging_dttm" jdbcType="TIMESTAMP" property="endChargingDttm" />
    <result column="total_charging_dttm" jdbcType="INTEGER" property="totalChargingDttm" />
    <result column="start_ammeter_no" jdbcType="DOUBLE" property="startAmmeterNo" />
    <result column="ent_ammeter_no" jdbcType="DOUBLE" property="entAmmeterNo" />
    <result column="total_charging_kwh" jdbcType="INTEGER" property="totalChargingKwh" />
    <result column="start_soc" jdbcType="INTEGER" property="startSoc" />
    <result column="end_soc" jdbcType="INTEGER" property="endSoc" />
    <result column="total_soc" jdbcType="INTEGER" property="totalSoc" />
    <result column="end_reason" jdbcType="INTEGER" property="endReason" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="sharp_start_charging_dttm" jdbcType="TIMESTAMP" property="sharpStartChargingDttm" />
    <result column="sharp_end_charging_dttm" jdbcType="TIMESTAMP" property="sharpEndChargingDttm" />
    <result column="sharp_start_ammeter_no" jdbcType="DOUBLE" property="sharpStartAmmeterNo" />
    <result column="sharp_end_ammeter_no" jdbcType="DOUBLE" property="sharpEndAmmeterNo" />
    <result column="sharp_total_charging_kwh" jdbcType="DOUBLE" property="sharpTotalChargingKwh" />
    <result column="peak_start_charging_dttm" jdbcType="TIMESTAMP" property="peakStartChargingDttm" />
    <result column="peak_end_charging_dttm" jdbcType="TIMESTAMP" property="peakEndChargingDttm" />
    <result column="peak_start_ammeter_no" jdbcType="DOUBLE" property="peakStartAmmeterNo" />
    <result column="peak_end_ammeter_no" jdbcType="DOUBLE" property="peakEndAmmeterNo" />
    <result column="peak_total_charging_kwh" jdbcType="DOUBLE" property="peakTotalChargingKwh" />
    <result column="flat_start_charging_dttm" jdbcType="TIMESTAMP" property="flatStartChargingDttm" />
    <result column="flat_end_charging_dttm" jdbcType="TIMESTAMP" property="flatEndChargingDttm" />
    <result column="flat_start_ammeter_no" jdbcType="DOUBLE" property="flatStartAmmeterNo" />
    <result column="flat_end_ammeter_no" jdbcType="DOUBLE" property="flatEndAmmeterNo" />
    <result column="flat_total_charging_kwh" jdbcType="DOUBLE" property="flatTotalChargingKwh" />
    <result column="valley_start_charging_dttm" jdbcType="TIMESTAMP" property="valleyStartChargingDttm" />
    <result column="valley_end_charging_dttm" jdbcType="TIMESTAMP" property="valleyEndChargingDttm" />
    <result column="valley_start_ammeter_no" jdbcType="DOUBLE" property="valleyStartAmmeterNo" />
    <result column="valley_end_ammeter_no" jdbcType="DOUBLE" property="valleyEndAmmeterNo" />
    <result column="valley_total_charging_kwh" jdbcType="DOUBLE" property="valleyTotalChargingKwh" />
    <result column="send_flag_kj" jdbcType="INTEGER" property="sendFlagKj" />
    <result column="send_flag_other" jdbcType="INTEGER" property="sendFlagOther" />
    <result column="abnormal_flag" jdbcType="INTEGER" property="abnormalFlag" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_dttm" jdbcType="TIMESTAMP" property="createDttm" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_dttm" jdbcType="TIMESTAMP" property="updateDttm" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, charging_record_no, equipment_no, order_number, card_number, charging_station_id,
    charged_amount, discount_amount, car_number, start_charging_dttm, end_charging_dttm,
    total_charging_dttm, start_ammeter_no, ent_ammeter_no, total_charging_kwh, start_soc,
    end_soc, total_soc, end_reason, message, sharp_start_charging_dttm, sharp_end_charging_dttm,
    sharp_start_ammeter_no, sharp_end_ammeter_no, sharp_total_charging_kwh, peak_start_charging_dttm,
    peak_end_charging_dttm, peak_start_ammeter_no, peak_end_ammeter_no, peak_total_charging_kwh,
    flat_start_charging_dttm, flat_end_charging_dttm, flat_start_ammeter_no, flat_end_ammeter_no,
    flat_total_charging_kwh, valley_start_charging_dttm, valley_end_charging_dttm, valley_start_ammeter_no,
    valley_end_ammeter_no, valley_total_charging_kwh, send_flag_kj, send_flag_other,
    abnormal_flag, create_user, create_dttm, update_user, update_dttm
  </sql>
  <select id="selectByExample" parameterType="com.mogateway.entity.ChargeRecordCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from charge_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from charge_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from charge_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.mogateway.entity.ChargeRecordCriteria">
    delete from charge_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mogateway.entity.ChargeRecord">
    insert into charge_record (id, charging_record_no, equipment_no,
    order_number, card_number, charging_station_id,
    charged_amount, discount_amount, car_number,
    start_charging_dttm, end_charging_dttm,
    total_charging_dttm, start_ammeter_no, ent_ammeter_no,
    total_charging_kwh, start_soc, end_soc,
    total_soc, end_reason, message,
    sharp_start_charging_dttm, sharp_end_charging_dttm,
    sharp_start_ammeter_no, sharp_end_ammeter_no,
    sharp_total_charging_kwh, peak_start_charging_dttm,
    peak_end_charging_dttm, peak_start_ammeter_no,
    peak_end_ammeter_no, peak_total_charging_kwh,
    flat_start_charging_dttm, flat_end_charging_dttm,
    flat_start_ammeter_no, flat_end_ammeter_no, flat_total_charging_kwh,
    valley_start_charging_dttm, valley_end_charging_dttm,
    valley_start_ammeter_no, valley_end_ammeter_no,
    valley_total_charging_kwh, send_flag_kj, send_flag_other,
    abnormal_flag, create_user, create_dttm,
    update_user, update_dttm)
    values (#{id,jdbcType=BIGINT}, #{chargingRecordNo,jdbcType=VARCHAR}, #{equipmentNo,jdbcType=VARCHAR},
    #{orderNumber,jdbcType=VARCHAR}, #{cardNumber,jdbcType=VARCHAR}, #{chargingStationId,jdbcType=VARCHAR},
    #{chargedAmount,jdbcType=DOUBLE}, #{discountAmount,jdbcType=DOUBLE}, #{carNumber,jdbcType=VARCHAR},
    #{startChargingDttm,jdbcType=TIMESTAMP}, #{endChargingDttm,jdbcType=TIMESTAMP},
    #{totalChargingDttm,jdbcType=INTEGER}, #{startAmmeterNo,jdbcType=DOUBLE}, #{entAmmeterNo,jdbcType=DOUBLE},
    #{totalChargingKwh,jdbcType=INTEGER}, #{startSoc,jdbcType=INTEGER}, #{endSoc,jdbcType=INTEGER},
    #{totalSoc,jdbcType=INTEGER}, #{endReason,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR},
    #{sharpStartChargingDttm,jdbcType=TIMESTAMP}, #{sharpEndChargingDttm,jdbcType=TIMESTAMP},
    #{sharpStartAmmeterNo,jdbcType=DOUBLE}, #{sharpEndAmmeterNo,jdbcType=DOUBLE},
    #{sharpTotalChargingKwh,jdbcType=DOUBLE}, #{peakStartChargingDttm,jdbcType=TIMESTAMP},
    #{peakEndChargingDttm,jdbcType=TIMESTAMP}, #{peakStartAmmeterNo,jdbcType=DOUBLE},
    #{peakEndAmmeterNo,jdbcType=DOUBLE}, #{peakTotalChargingKwh,jdbcType=DOUBLE},
    #{flatStartChargingDttm,jdbcType=TIMESTAMP}, #{flatEndChargingDttm,jdbcType=TIMESTAMP},
    #{flatStartAmmeterNo,jdbcType=DOUBLE}, #{flatEndAmmeterNo,jdbcType=DOUBLE}, #{flatTotalChargingKwh,jdbcType=DOUBLE},
    #{valleyStartChargingDttm,jdbcType=TIMESTAMP}, #{valleyEndChargingDttm,jdbcType=TIMESTAMP},
    #{valleyStartAmmeterNo,jdbcType=DOUBLE}, #{valleyEndAmmeterNo,jdbcType=DOUBLE},
    #{valleyTotalChargingKwh,jdbcType=DOUBLE}, #{sendFlagKj,jdbcType=INTEGER}, #{sendFlagOther,jdbcType=INTEGER},
    #{abnormalFlag,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, #{createDttm,jdbcType=TIMESTAMP},
    #{updateUser,jdbcType=VARCHAR}, #{updateDttm,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mogateway.entity.ChargeRecord">
    insert into charge_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="chargingRecordNo != null">
        charging_record_no,
      </if>
      <if test="equipmentNo != null">
        equipment_no,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="cardNumber != null">
        card_number,
      </if>
      <if test="chargingStationId != null">
        charging_station_id,
      </if>
      <if test="chargedAmount != null">
        charged_amount,
      </if>
      <if test="discountAmount != null">
        discount_amount,
      </if>
      <if test="carNumber != null">
        car_number,
      </if>
      <if test="startChargingDttm != null">
        start_charging_dttm,
      </if>
      <if test="endChargingDttm != null">
        end_charging_dttm,
      </if>
      <if test="totalChargingDttm != null">
        total_charging_dttm,
      </if>
      <if test="startAmmeterNo != null">
        start_ammeter_no,
      </if>
      <if test="entAmmeterNo != null">
        ent_ammeter_no,
      </if>
      <if test="totalChargingKwh != null">
        total_charging_kwh,
      </if>
      <if test="startSoc != null">
        start_soc,
      </if>
      <if test="endSoc != null">
        end_soc,
      </if>
      <if test="totalSoc != null">
        total_soc,
      </if>
      <if test="endReason != null">
        end_reason,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="sharpStartChargingDttm != null">
        sharp_start_charging_dttm,
      </if>
      <if test="sharpEndChargingDttm != null">
        sharp_end_charging_dttm,
      </if>
      <if test="sharpStartAmmeterNo != null">
        sharp_start_ammeter_no,
      </if>
      <if test="sharpEndAmmeterNo != null">
        sharp_end_ammeter_no,
      </if>
      <if test="sharpTotalChargingKwh != null">
        sharp_total_charging_kwh,
      </if>
      <if test="sharpTotalChargingDTTM != null">
        sharp_total_charging_dttm,
      </if>
      <if test="sharpTotalChargingAmount != null">
        sharp_total_charging_amount,
      </if>
      <if test="peakStartChargingDttm != null">
        peak_start_charging_dttm,
      </if>
      <if test="peakEndChargingDttm != null">
        peak_end_charging_dttm,
      </if>
      <if test="peakStartAmmeterNo != null">
        peak_start_ammeter_no,
      </if>
      <if test="peakEndAmmeterNo != null">
        peak_end_ammeter_no,
      </if>
      <if test="peakTotalChargingKwh != null">
        peak_total_charging_kwh,
      </if>
      <if test="peakTotalChargingDTTM != null">
        peak_total_charging_dttm,
      </if>
      <if test="peakTotalChargingAmount != null">
        peak_total_charging_amount,
      </if>
      <if test="flatStartChargingDttm != null">
        flat_start_charging_dttm,
      </if>
      <if test="flatEndChargingDttm != null">
        flat_end_charging_dttm,
      </if>
      <if test="flatStartAmmeterNo != null">
        flat_start_ammeter_no,
      </if>
      <if test="flatEndAmmeterNo != null">
        flat_end_ammeter_no,
      </if>
      <if test="flatTotalChargingKwh != null">
        flat_total_charging_kwh,
      </if>
      <if test="flatTotalChargingDTTM != null">
        flat_total_charging_dttm,
      </if>
      <if test="flatTotalChargingAmount != null">
        flat_total_charging_amount,
      </if>
      <if test="valleyStartChargingDttm != null">
        valley_start_charging_dttm,
      </if>
      <if test="valleyEndChargingDttm != null">
        valley_end_charging_dttm,
      </if>
      <if test="valleyStartAmmeterNo != null">
        valley_start_ammeter_no,
      </if>
      <if test="valleyEndAmmeterNo != null">
        valley_end_ammeter_no,
      </if>
      <if test="valleyTotalChargingKwh != null">
        valley_total_charging_kwh,
      </if>
      <if test="valleyTotalChargingDTTM != null">
        valley_total_charging_dttm,
      </if>
      <if test="valleyTotalChargingAmount != null">
        valley_total_charging_amount,
      </if>
      <if test="sendFlagKj != null">
        send_flag_kj,
      </if>
      <if test="sendFlagOther != null">
        send_flag_other,
      </if>
      <if test="abnormalFlag != null">
        abnormal_flag,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createDttm != null">
        create_dttm,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateDttm != null">
        update_dttm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="chargingRecordNo != null">
        #{chargingRecordNo,jdbcType=VARCHAR},
      </if>
      <if test="equipmentNo != null">
        #{equipmentNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null">
        #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="chargingStationId != null">
        #{chargingStationId,jdbcType=VARCHAR},
      </if>
      <if test="chargedAmount != null">
        #{chargedAmount,jdbcType=DOUBLE},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DOUBLE},
      </if>
      <if test="carNumber != null">
        #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="startChargingDttm != null">
        #{startChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="endChargingDttm != null">
        #{endChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="totalChargingDttm != null">
        #{totalChargingDttm,jdbcType=INTEGER},
      </if>
      <if test="startAmmeterNo != null">
        #{startAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="entAmmeterNo != null">
        #{entAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="totalChargingKwh != null">
        #{totalChargingKwh,jdbcType=INTEGER},
      </if>
      <if test="startSoc != null">
        #{startSoc,jdbcType=INTEGER},
      </if>
      <if test="endSoc != null">
        #{endSoc,jdbcType=INTEGER},
      </if>
      <if test="totalSoc != null">
        #{totalSoc,jdbcType=INTEGER},
      </if>
      <if test="endReason != null">
        #{endReason,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="sharpStartChargingDttm != null">
        #{sharpStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="sharpEndChargingDttm != null">
        #{sharpEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="sharpStartAmmeterNo != null">
        #{sharpStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="sharpEndAmmeterNo != null">
        #{sharpEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="sharpTotalChargingKwh != null">
        #{sharpTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="sharpTotalChargingDTTM != null">
        #{sharpTotalChargingDTTM},
      </if>
      <if test="sharpTotalChargingAmount != null">
        #{sharpTotalChargingAmount},
      </if>
      <if test="peakStartChargingDttm != null">
        #{peakStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="peakEndChargingDttm != null">
        #{peakEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="peakStartAmmeterNo != null">
        #{peakStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="peakEndAmmeterNo != null">
        #{peakEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="peakTotalChargingKwh != null">
        #{peakTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="peakTotalChargingDTTM != null">
        #{peakTotalChargingDTTM},
      </if>
      <if test="peakTotalChargingAmount != null">
        #{peakTotalChargingAmount},
      </if>
      <if test="flatStartChargingDttm != null">
        #{flatStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="flatEndChargingDttm != null">
        #{flatEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="flatStartAmmeterNo != null">
        #{flatStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="flatEndAmmeterNo != null">
        #{flatEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="flatTotalChargingKwh != null">
        #{flatTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="flatTotalChargingDTTM != null">
        #{flatTotalChargingDTTM},
      </if>
      <if test="flatTotalChargingAmount != null">
        #{flatTotalChargingAmount},
      </if>
      <if test="valleyStartChargingDttm != null">
        #{valleyStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="valleyEndChargingDttm != null">
        #{valleyEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="valleyStartAmmeterNo != null">
        #{valleyStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="valleyEndAmmeterNo != null">
        #{valleyEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="valleyTotalChargingKwh != null">
        #{valleyTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="valleyTotalChargingDTTM != null">
        #{valleyTotalChargingDTTM},
      </if>
      <if test="valleyTotalChargingAmount != null">
        #{valleyTotalChargingAmount},
      </if>
      <if test="sendFlagKj != null">
        #{sendFlagKj,jdbcType=INTEGER},
      </if>
      <if test="sendFlagOther != null">
        #{sendFlagOther,jdbcType=INTEGER},
      </if>
      <if test="abnormalFlag != null">
        #{abnormalFlag,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDttm != null">
        #{createDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDttm != null">
        #{updateDttm,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mogateway.entity.ChargeRecordCriteria" resultType="java.lang.Long">
    select count(*) from charge_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update charge_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.chargingRecordNo != null">
        charging_record_no = #{record.chargingRecordNo,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentNo != null">
        equipment_no = #{record.equipmentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNumber != null">
        card_number = #{record.cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.chargingStationId != null">
        charging_station_id = #{record.chargingStationId,jdbcType=VARCHAR},
      </if>
      <if test="record.chargedAmount != null">
        charged_amount = #{record.chargedAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.discountAmount != null">
        discount_amount = #{record.discountAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.carNumber != null">
        car_number = #{record.carNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.startChargingDttm != null">
        start_charging_dttm = #{record.startChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endChargingDttm != null">
        end_charging_dttm = #{record.endChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalChargingDttm != null">
        total_charging_dttm = #{record.totalChargingDttm,jdbcType=INTEGER},
      </if>
      <if test="record.startAmmeterNo != null">
        start_ammeter_no = #{record.startAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="record.entAmmeterNo != null">
        ent_ammeter_no = #{record.entAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="record.totalChargingKwh != null">
        total_charging_kwh = #{record.totalChargingKwh,jdbcType=INTEGER},
      </if>
      <if test="record.startSoc != null">
        start_soc = #{record.startSoc,jdbcType=INTEGER},
      </if>
      <if test="record.endSoc != null">
        end_soc = #{record.endSoc,jdbcType=INTEGER},
      </if>
      <if test="record.totalSoc != null">
        total_soc = #{record.totalSoc,jdbcType=INTEGER},
      </if>
      <if test="record.endReason != null">
        end_reason = #{record.endReason,jdbcType=INTEGER},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.sharpStartChargingDttm != null">
        sharp_start_charging_dttm = #{record.sharpStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sharpEndChargingDttm != null">
        sharp_end_charging_dttm = #{record.sharpEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sharpStartAmmeterNo != null">
        sharp_start_ammeter_no = #{record.sharpStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="record.sharpEndAmmeterNo != null">
        sharp_end_ammeter_no = #{record.sharpEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="record.sharpTotalChargingKwh != null">
        sharp_total_charging_kwh = #{record.sharpTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="record.peakStartChargingDttm != null">
        peak_start_charging_dttm = #{record.peakStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.peakEndChargingDttm != null">
        peak_end_charging_dttm = #{record.peakEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.peakStartAmmeterNo != null">
        peak_start_ammeter_no = #{record.peakStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="record.peakEndAmmeterNo != null">
        peak_end_ammeter_no = #{record.peakEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="record.peakTotalChargingKwh != null">
        peak_total_charging_kwh = #{record.peakTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="record.flatStartChargingDttm != null">
        flat_start_charging_dttm = #{record.flatStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flatEndChargingDttm != null">
        flat_end_charging_dttm = #{record.flatEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flatStartAmmeterNo != null">
        flat_start_ammeter_no = #{record.flatStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="record.flatEndAmmeterNo != null">
        flat_end_ammeter_no = #{record.flatEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="record.flatTotalChargingKwh != null">
        flat_total_charging_kwh = #{record.flatTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="record.valleyStartChargingDttm != null">
        valley_start_charging_dttm = #{record.valleyStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.valleyEndChargingDttm != null">
        valley_end_charging_dttm = #{record.valleyEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.valleyStartAmmeterNo != null">
        valley_start_ammeter_no = #{record.valleyStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="record.valleyEndAmmeterNo != null">
        valley_end_ammeter_no = #{record.valleyEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="record.valleyTotalChargingKwh != null">
        valley_total_charging_kwh = #{record.valleyTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="record.sendFlagKj != null">
        send_flag_kj = #{record.sendFlagKj,jdbcType=INTEGER},
      </if>
      <if test="record.sendFlagOther != null">
        send_flag_other = #{record.sendFlagOther,jdbcType=INTEGER},
      </if>
      <if test="record.abnormalFlag != null">
        abnormal_flag = #{record.abnormalFlag,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createDttm != null">
        create_dttm = #{record.createDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDttm != null">
        update_dttm = #{record.updateDttm,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update charge_record
    set id = #{record.id,jdbcType=BIGINT},
    charging_record_no = #{record.chargingRecordNo,jdbcType=VARCHAR},
    equipment_no = #{record.equipmentNo,jdbcType=VARCHAR},
    order_number = #{record.orderNumber,jdbcType=VARCHAR},
    card_number = #{record.cardNumber,jdbcType=VARCHAR},
    charging_station_id = #{record.chargingStationId,jdbcType=VARCHAR},
    charged_amount = #{record.chargedAmount,jdbcType=DOUBLE},
    discount_amount = #{record.discountAmount,jdbcType=DOUBLE},
    car_number = #{record.carNumber,jdbcType=VARCHAR},
    start_charging_dttm = #{record.startChargingDttm,jdbcType=TIMESTAMP},
    end_charging_dttm = #{record.endChargingDttm,jdbcType=TIMESTAMP},
    total_charging_dttm = #{record.totalChargingDttm,jdbcType=INTEGER},
    start_ammeter_no = #{record.startAmmeterNo,jdbcType=DOUBLE},
    ent_ammeter_no = #{record.entAmmeterNo,jdbcType=DOUBLE},
    total_charging_kwh = #{record.totalChargingKwh,jdbcType=INTEGER},
    start_soc = #{record.startSoc,jdbcType=INTEGER},
    end_soc = #{record.endSoc,jdbcType=INTEGER},
    total_soc = #{record.totalSoc,jdbcType=INTEGER},
    end_reason = #{record.endReason,jdbcType=INTEGER},
    message = #{record.message,jdbcType=VARCHAR},
    sharp_start_charging_dttm = #{record.sharpStartChargingDttm,jdbcType=TIMESTAMP},
    sharp_end_charging_dttm = #{record.sharpEndChargingDttm,jdbcType=TIMESTAMP},
    sharp_start_ammeter_no = #{record.sharpStartAmmeterNo,jdbcType=DOUBLE},
    sharp_end_ammeter_no = #{record.sharpEndAmmeterNo,jdbcType=DOUBLE},
    sharp_total_charging_kwh = #{record.sharpTotalChargingKwh,jdbcType=DOUBLE},
    peak_start_charging_dttm = #{record.peakStartChargingDttm,jdbcType=TIMESTAMP},
    peak_end_charging_dttm = #{record.peakEndChargingDttm,jdbcType=TIMESTAMP},
    peak_start_ammeter_no = #{record.peakStartAmmeterNo,jdbcType=DOUBLE},
    peak_end_ammeter_no = #{record.peakEndAmmeterNo,jdbcType=DOUBLE},
    peak_total_charging_kwh = #{record.peakTotalChargingKwh,jdbcType=DOUBLE},
    flat_start_charging_dttm = #{record.flatStartChargingDttm,jdbcType=TIMESTAMP},
    flat_end_charging_dttm = #{record.flatEndChargingDttm,jdbcType=TIMESTAMP},
    flat_start_ammeter_no = #{record.flatStartAmmeterNo,jdbcType=DOUBLE},
    flat_end_ammeter_no = #{record.flatEndAmmeterNo,jdbcType=DOUBLE},
    flat_total_charging_kwh = #{record.flatTotalChargingKwh,jdbcType=DOUBLE},
    valley_start_charging_dttm = #{record.valleyStartChargingDttm,jdbcType=TIMESTAMP},
    valley_end_charging_dttm = #{record.valleyEndChargingDttm,jdbcType=TIMESTAMP},
    valley_start_ammeter_no = #{record.valleyStartAmmeterNo,jdbcType=DOUBLE},
    valley_end_ammeter_no = #{record.valleyEndAmmeterNo,jdbcType=DOUBLE},
    valley_total_charging_kwh = #{record.valleyTotalChargingKwh,jdbcType=DOUBLE},
    send_flag_kj = #{record.sendFlagKj,jdbcType=INTEGER},
    send_flag_other = #{record.sendFlagOther,jdbcType=INTEGER},
    abnormal_flag = #{record.abnormalFlag,jdbcType=INTEGER},
    create_user = #{record.createUser,jdbcType=VARCHAR},
    create_dttm = #{record.createDttm,jdbcType=TIMESTAMP},
    update_user = #{record.updateUser,jdbcType=VARCHAR},
    update_dttm = #{record.updateDttm,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mogateway.entity.ChargeRecord">
    update charge_record
    <set>
      <if test="chargingRecordNo != null">
        charging_record_no = #{chargingRecordNo,jdbcType=VARCHAR},
      </if>
      <if test="equipmentNo != null">
        equipment_no = #{equipmentNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null">
        card_number = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="chargingStationId != null">
        charging_station_id = #{chargingStationId,jdbcType=VARCHAR},
      </if>
      <if test="chargedAmount != null">
        charged_amount = #{chargedAmount,jdbcType=DOUBLE},
      </if>
      <if test="discountAmount != null">
        discount_amount = #{discountAmount,jdbcType=DOUBLE},
      </if>
      <if test="carNumber != null">
        car_number = #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="startChargingDttm != null">
        start_charging_dttm = #{startChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="endChargingDttm != null">
        end_charging_dttm = #{endChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="totalChargingDttm != null">
        total_charging_dttm = #{totalChargingDttm,jdbcType=INTEGER},
      </if>
      <if test="startAmmeterNo != null">
        start_ammeter_no = #{startAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="entAmmeterNo != null">
        ent_ammeter_no = #{entAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="totalChargingKwh != null">
        total_charging_kwh = #{totalChargingKwh,jdbcType=INTEGER},
      </if>
      <if test="startSoc != null">
        start_soc = #{startSoc,jdbcType=INTEGER},
      </if>
      <if test="endSoc != null">
        end_soc = #{endSoc,jdbcType=INTEGER},
      </if>
      <if test="totalSoc != null">
        total_soc = #{totalSoc,jdbcType=INTEGER},
      </if>
      <if test="endReason != null">
        end_reason = #{endReason,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="sharpStartChargingDttm != null">
        sharp_start_charging_dttm = #{sharpStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="sharpEndChargingDttm != null">
        sharp_end_charging_dttm = #{sharpEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="sharpStartAmmeterNo != null">
        sharp_start_ammeter_no = #{sharpStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="sharpEndAmmeterNo != null">
        sharp_end_ammeter_no = #{sharpEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="sharpTotalChargingKwh != null">
        sharp_total_charging_kwh = #{sharpTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="peakStartChargingDttm != null">
        peak_start_charging_dttm = #{peakStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="peakEndChargingDttm != null">
        peak_end_charging_dttm = #{peakEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="peakStartAmmeterNo != null">
        peak_start_ammeter_no = #{peakStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="peakEndAmmeterNo != null">
        peak_end_ammeter_no = #{peakEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="peakTotalChargingKwh != null">
        peak_total_charging_kwh = #{peakTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="flatStartChargingDttm != null">
        flat_start_charging_dttm = #{flatStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="flatEndChargingDttm != null">
        flat_end_charging_dttm = #{flatEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="flatStartAmmeterNo != null">
        flat_start_ammeter_no = #{flatStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="flatEndAmmeterNo != null">
        flat_end_ammeter_no = #{flatEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="flatTotalChargingKwh != null">
        flat_total_charging_kwh = #{flatTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="valleyStartChargingDttm != null">
        valley_start_charging_dttm = #{valleyStartChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="valleyEndChargingDttm != null">
        valley_end_charging_dttm = #{valleyEndChargingDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="valleyStartAmmeterNo != null">
        valley_start_ammeter_no = #{valleyStartAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="valleyEndAmmeterNo != null">
        valley_end_ammeter_no = #{valleyEndAmmeterNo,jdbcType=DOUBLE},
      </if>
      <if test="valleyTotalChargingKwh != null">
        valley_total_charging_kwh = #{valleyTotalChargingKwh,jdbcType=DOUBLE},
      </if>
      <if test="sendFlagKj != null">
        send_flag_kj = #{sendFlagKj,jdbcType=INTEGER},
      </if>
      <if test="sendFlagOther != null">
        send_flag_other = #{sendFlagOther,jdbcType=INTEGER},
      </if>
      <if test="abnormalFlag != null">
        abnormal_flag = #{abnormalFlag,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDttm != null">
        create_dttm = #{createDttm,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDttm != null">
        update_dttm = #{updateDttm,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mogateway.entity.ChargeRecord">
    update charge_record
    set charging_record_no = #{chargingRecordNo,jdbcType=VARCHAR},
      equipment_no = #{equipmentNo,jdbcType=VARCHAR},
      order_number = #{orderNumber,jdbcType=VARCHAR},
      card_number = #{cardNumber,jdbcType=VARCHAR},
      charging_station_id = #{chargingStationId,jdbcType=VARCHAR},
      charged_amount = #{chargedAmount,jdbcType=DOUBLE},
      discount_amount = #{discountAmount,jdbcType=DOUBLE},
      car_number = #{carNumber,jdbcType=VARCHAR},
      start_charging_dttm = #{startChargingDttm,jdbcType=TIMESTAMP},
      end_charging_dttm = #{endChargingDttm,jdbcType=TIMESTAMP},
      total_charging_dttm = #{totalChargingDttm,jdbcType=INTEGER},
      start_ammeter_no = #{startAmmeterNo,jdbcType=DOUBLE},
      ent_ammeter_no = #{entAmmeterNo,jdbcType=DOUBLE},
      total_charging_kwh = #{totalChargingKwh,jdbcType=INTEGER},
      start_soc = #{startSoc,jdbcType=INTEGER},
      end_soc = #{endSoc,jdbcType=INTEGER},
      total_soc = #{totalSoc,jdbcType=INTEGER},
      end_reason = #{endReason,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      sharp_start_charging_dttm = #{sharpStartChargingDttm,jdbcType=TIMESTAMP},
      sharp_end_charging_dttm = #{sharpEndChargingDttm,jdbcType=TIMESTAMP},
      sharp_start_ammeter_no = #{sharpStartAmmeterNo,jdbcType=DOUBLE},
      sharp_end_ammeter_no = #{sharpEndAmmeterNo,jdbcType=DOUBLE},
      sharp_total_charging_kwh = #{sharpTotalChargingKwh,jdbcType=DOUBLE},
      peak_start_charging_dttm = #{peakStartChargingDttm,jdbcType=TIMESTAMP},
      peak_end_charging_dttm = #{peakEndChargingDttm,jdbcType=TIMESTAMP},
      peak_start_ammeter_no = #{peakStartAmmeterNo,jdbcType=DOUBLE},
      peak_end_ammeter_no = #{peakEndAmmeterNo,jdbcType=DOUBLE},
      peak_total_charging_kwh = #{peakTotalChargingKwh,jdbcType=DOUBLE},
      flat_start_charging_dttm = #{flatStartChargingDttm,jdbcType=TIMESTAMP},
      flat_end_charging_dttm = #{flatEndChargingDttm,jdbcType=TIMESTAMP},
      flat_start_ammeter_no = #{flatStartAmmeterNo,jdbcType=DOUBLE},
      flat_end_ammeter_no = #{flatEndAmmeterNo,jdbcType=DOUBLE},
      flat_total_charging_kwh = #{flatTotalChargingKwh,jdbcType=DOUBLE},
      valley_start_charging_dttm = #{valleyStartChargingDttm,jdbcType=TIMESTAMP},
      valley_end_charging_dttm = #{valleyEndChargingDttm,jdbcType=TIMESTAMP},
      valley_start_ammeter_no = #{valleyStartAmmeterNo,jdbcType=DOUBLE},
      valley_end_ammeter_no = #{valleyEndAmmeterNo,jdbcType=DOUBLE},
      valley_total_charging_kwh = #{valleyTotalChargingKwh,jdbcType=DOUBLE},
      send_flag_kj = #{sendFlagKj,jdbcType=INTEGER},
      send_flag_other = #{sendFlagOther,jdbcType=INTEGER},
      abnormal_flag = #{abnormalFlag,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_dttm = #{createDttm,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_dttm = #{updateDttm,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="chargeRecordStatistics" resultType="com.mogateway.entity.ChargeRecord">
    select
    sum(total_charging_kwh) AS totalChargingKwh,COUNT(id) AS chargeCount,sum(total_charging_dttm) AS  totalChargingDttm
    from charge_record
    WHERE abnormal_flag = #{abnormalFlag,jdbcType=INTEGER}
  </select>
</mapper>